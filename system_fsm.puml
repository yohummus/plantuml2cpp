' Copyright (c) 2020, Johannes Bergmann
' 
' All rights reserved.

@startuml
hide empty description

title System FSM

[*] -> SystemOff


' ========== SYSTEM ON ========== '
SystemOn :
SystemOn --> SystemError : CriticalErrorDetected\n/ long_beep()
SystemOn --> FactoryMode : EnterFactoryModeBleRequest\n/ tripple_beep()
SystemOn --> PoweringDown : LongPress\n/ long_beep()

state SystemOn {
    [*] -> PoweringUp

    ' ========== POWERING UP ========== '
    PoweringUp : entry / set_aux_power_enabled(true)
    PoweringUp : exit / short_beep()
    PoweringUp --> Discharge : AuxPwrSwitchedOn\n[charger_connected() == false]
    PoweringUp --> Charge : AuxPwrSwitchedOn\n[charger_connected() == true]

    ' ========== STANDBY ========== '
    Standby : entry / set_aux_power_enabled(false)
    Standby --> PoweringUp : LongPress
    Standby --> PoweringDown : CriticallyLowSocDetected

    state Standby {
        [*] -> Standby_Idle

        Standby_Idle : entry / set_aux_power_enabled(false)
        Standby_Idle : entry / ::global::show_status_led_pattern_fn(StatusLed::kOff)
        Standby_Idle --> Standby_PoweringUpForSoc : ShortPress
        Standby_Idle --> Standby_PoweringUpForFlash : StandbyFlashTimerExpired

        Standby_PoweringUpForSoc : entry / set_aux_power_enabled(true)
        Standby_PoweringUpForSoc --> Standby_ShowingSoc : AuxPwrSwitchedOn

        Standby_ShowingSoc : entry / show_soc()
        Standby_ShowingSoc --> Standby_Idle : StatusLedPatternFinished

        Standby_PoweringUpForFlash : entry / set_aux_power_enabled(true)
        Standby_PoweringUpForFlash --> Standby_ShowingFlash : AuxPwrSwitchedOn

        Standby_ShowingFlash : entry / ::global::show_status_led_pattern_fn(StatusLed::kFlashRarely)
        Standby_ShowingFlash --> Standby_Idle : StatusLedPatternFinished
    }

    ' ========== CHARGE ========== '
    Charge :

    state Charge {
        [*] -> Charge_Charging

        Charge_Charging : entry / show_charging_progress()
        Charge_Charging --> Charge_Done : ChargingDone

        Charge_Done : entry / ::global::show_status_led_pattern_fn(StatusLed::kFadeInThenOn)
    }

    ' ========== DISCHARGE ========== '
    Discharge :
    Discharge --> Standby : InactivityDetected\n/ long_beep()

    state Discharge {
        [*] -> Discharge_PreCharge

        Discharge_PreCharge : entry / ::global::show_status_led_pattern_fn(StatusLed::kFadeIn)
        Discharge_PreCharge --> Discharge_PowerOn : PreChargeDone

        Discharge_PowerOn : entry / ::global::show_status_led_pattern_fn(StatusLed::kOn)
        Discharge_PowerOn --> Discharge_PowerOnWarn : SoftLimitsExceeded

        Discharge_PowerOnWarn : entry / long_beep()
        Discharge_PowerOnWarn : entry / ::global::show_status_led_pattern_fn(StatusLed::kFlashFast)
        Discharge_PowerOnWarn --> Discharge_PowerOn : BackUnderSoftLimits
        Discharge_PowerOnWarn --> Discharge_PowerOnWarn : BuzzerPatternFinished
    }
}


' ========== ON FOR SOC ========== '
OnForSoc :
OnForSoc --> SystemError : CriticalErrorDetected\n/ long_beep()

state OnForSoc {
    [*] -> OnForSoc_PowerUpForSoc

    OnForSoc_PowerUpForSoc : entry / set_aux_power_enabled(true)
    OnForSoc_PowerUpForSoc --> OnForSoc_ShowingSoc : AuxPwrSwitchedOn

    OnForSoc_ShowingSoc : entry / short_beep()
    OnForSoc_ShowingSoc : entry / show_soc()
    OnForSoc_ShowingSoc --> PoweringDown : StatusLedPatternFinished
    OnForSoc_ShowingSoc --> OnForSoc_ShowingSoc : ShortPress
}


' ========== SYSTEM OFF ========== '
SystemOff : ExtraLongPress / boot_into_bootloader()
note right of SystemOff : MCU has no power\nor just powered up
SystemOff --> OnForSoc : ShortPress
SystemOff --> SystemOn : LongPress

PoweringDown : entry / set_aux_power_enabled(false)
PoweringDown : entry / ::global::show_status_led_pattern_fn(StatusLed::kOff)
PoweringDown ---> SystemOff : AuxPwrSwitchedOff\n/ activate_afe_ship_mode()


' ========== SYSTEM ERROR ========== '
SystemError : entry / show_error_code()
SystemError --> PoweringDown : LongPress\n/ long_beep()


' ========== FACTORY MODE ========== '
FactoryMode : entry / ::global::show_status_led_pattern_fn(StatusLed::kFadeOut)


@enduml

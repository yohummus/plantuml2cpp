@startuml
hide empty description

title Aux Power FSM

[*] --> AuxPowerFsm

AuxPowerFsm :

state AuxPowerFsm {  
  AuxPowerFsm --> WaitForOn : EnableRequest
  AuxPowerFsm --> DelayOff : DisableRequest

  [*] -> Off

  Off :

  WaitForOn : entry / start_pwr_check_timer(10_ms)
  WaitForOn : entry / set_aux_en(true)
  WaitForOn --> Error : PwrCheckTimeout\n[aux_pwr_good() == false]
  WaitForOn --> On : PwrCheckTimeout\n[aux_pwr_good() == true]

  On : entry / emit_event(AuxPower::kSwitchedOn)

  DelayOff : entry / start_off_delay_timer(20_ms)
  DelayOff : entry / emit_event(AuxPower::kAboutToSwitchOff)
  DelayOff --> WaitForOff : OffDelayTimeout

  WaitForOff : entry / start_pwr_check_timer(500_ms)
  WaitForOff : entry / set_aux_en(false)
  WaitForOff : entry / disable_output_pins()
  WaitForOff : entry / emit_event(AuxPower::kSwitchedOff)
  WaitForOff --> Error : PwrCheckTimeout\n[aux_pwr_good() == true]
  WaitForOff --> Off : PwrCheckTimeout\n[aux_pwr_good() == false]

  Error : entry / emit_event(AuxPower::kError)
}

@enduml
